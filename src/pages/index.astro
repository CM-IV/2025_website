---
import BlogCard from '@/components/BlogCard.astro'
import Link from '@/components/Link.astro'
import PageHead from '@/components/PageHead.astro'
import { buttonVariants } from '@/components/ui/button'
import { SITE } from '@/consts'
import Layout from '@/layouts/Layout.astro'
import { getRecentPosts } from '@/lib/data-utils'

const subtitles = [
  'Crafting efficient solutions through code',
  'Exploring the frontiers of computer science',
  'Transforming ideas into algorithms',
  'Optimizing the digital experience',
  'Building robust systems',
  'Where mathematics meets code',
  'Optimizing the art of computation',
  'Code as craft: Engineering elegant solutions',
]

const skills = [
  { name: 'ReactJS', color: 'blue' },
  { name: 'Rust', color: 'orange' },
  { name: 'STM32', color: 'green' },
  { name: 'ESP32', color: 'purple' },
  { name: 'TypeScript', color: 'indigo' },
  { name: 'Python', color: 'yellow' },
]

const blog = await getRecentPosts(SITE.featuredPostCount)
---

<Layout>
  <PageHead slot="head" title="Home" />
  <section class="relative overflow-hidden">
    {/* Enhanced circuit decorations */}
    <svg
      class="circuit-element animate-float top-10 left-10 hidden h-24 w-24 opacity-50 md:block dark:opacity-30"
      viewBox="0 0 100 100"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M20,20 L80,20 L80,80 L20,80 Z"
        stroke="currentColor"
        stroke-width="1.5"
        fill="none"
        stroke-dasharray="5,3"></path>
      <circle
        cx="50"
        cy="50"
        r="15"
        stroke="currentColor"
        stroke-width="1"
        fill="none"></circle>
      <path
        d="M20,50 L35,50 M65,50 L80,50 M50,20 L50,35 M50,65 L50,80"
        stroke="currentColor"
        stroke-width="1"></path>
      <circle cx="50" cy="50" r="3" fill="currentColor"></circle>
    </svg>

    <svg
      class="circuit-element animate-float right-10 bottom-10 hidden h-32 w-32 opacity-50 md:block dark:opacity-30"
      viewBox="0 0 100 100"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M10,10 L90,10 L90,90 L10,90 Z"
        stroke="currentColor"
        stroke-width="2"
        fill="none"></path>
      <path
        d="M30,30 L70,30 L70,70 L30,70 Z"
        stroke="currentColor"
        stroke-width="1.5"
        fill="none"></path>
      <path
        d="M10,50 L25,50 M75,50 L90,50 M50,10 L50,25 M50,75 L50,90"
        stroke="currentColor"
        stroke-width="1"></path>
      <circle cx="50" cy="50" r="5" fill="currentColor"></circle>
      <path
        d="M30,50 L70,50 M50,30 L50,70"
        stroke="currentColor"
        stroke-width="1"
        stroke-dasharray="3,2"></path>
    </svg>

    <svg
      class="circuit-element animate-float top-10 right-10 hidden h-32 w-32 opacity-50 md:block dark:opacity-30"
      version="1.1"
      viewBox="0 0 100 100"
      xmlns="http://www.w3.org/2000/svg"
    >
      <rect
        transform="rotate(225)"
        x="-87.599"
        y="-16.888"
        width="33.776"
        height="33.776"></rect>
      <rect
        x="38.112"
        y="38.112"
        width="23.776"
        height="23.776"
        stroke="currentColor"></rect>
      <circle cx="50" cy="50" r="5.8163" stroke="white"></circle>
      <path d="m61.633 38.061-7.6531 7.6531" stroke="white"></path>

      <path
        d="m38.097 38.133c0.1551 0.08954 7.7565 7.7565 7.7565 7.7565"
        fill="#fff"
        stroke="white"></path>
      <path d="m38.01 61.837 7.7296-7.7296" fill="none" stroke="white"></path>
      <path d="m61.786 61.786-7.6786-7.6786" fill="#fff" stroke="white"></path>
    </svg>

    <svg
      class="circuit-element animate-float bottom-10 left-10 hidden h-24 w-24 opacity-50 md:block dark:opacity-30"
      width="100"
      height="100"
      viewBox="0 0 100 100"
      xmlns="http://www.w3.org/2000/svg"
    >
      <!-- Outer diamond -->
      <rect
        x="25"
        y="25"
        width="50"
        height="50"
        transform="rotate(45 50 50)"
        fill="none"
        stroke="currentColor"
        stroke-width="1.5"></rect>

      <!-- Inner diamond -->
      <rect
        x="35"
        y="35"
        width="30"
        height="30"
        transform="rotate(45 50 50)"
        fill="none"
        stroke="currentColor"
        stroke-width="1"
        stroke-dasharray="5,3"></rect>

      <!-- Connection lines -->
      <line
        x1="10"
        y1="50"
        x2="35"
        y2="50"
        stroke="currentColor"
        stroke-width="1"></line>
      <line
        x1="65"
        y1="50"
        x2="90"
        y2="50"
        stroke="currentColor"
        stroke-width="1"></line>

      <!-- Central node -->
      <circle cx="50" cy="50" r="3" fill="currentColor"></circle>
    </svg>

    <div
      class="bg-background relative overflow-hidden px-4 py-20 sm:px-6 md:py-28 lg:px-8"
    >
      <div class="relative mx-auto max-w-3xl text-center">
        <h1
          class="gradient-title mb-4 bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-600 bg-clip-text text-3xl font-bold tracking-tight text-transparent sm:text-5xl md:text-6xl dark:from-blue-400 dark:via-purple-400 dark:to-indigo-400"
        >
          <span class="inline-block">
            {
              SITE.title.split('').map((char, i) => (
                <span
                  class="hover:animate-float"
                  style={`animation-delay: ${i * 0.1}s`}
                >
                  {char === '' ? '\u00A0' : char}
                </span>
              ))
            }
          </span>
        </h1>

        <div class="mb-8 text-lg text-gray-700 sm:text-xl dark:text-gray-300">
          <div class="typewriter-container">
            <span
              id="typewriter"
              class="typewriter-text"
              data-texts={JSON.stringify(subtitles)}
            >
              {subtitles[0]}
            </span>
            <span class="typewriter-cursor"></span>
          </div>
        </div>

        <div class="flex flex-col justify-center gap-4 sm:flex-row">
          <a
            href="/about"
            class="group relative overflow-hidden rounded-lg border border-gray-200 bg-white px-6 py-3 text-sm font-medium text-gray-900 shadow-sm transition-all duration-300 hover:bg-gray-50 hover:shadow-md sm:text-base dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100 dark:hover:bg-gray-700"
          >
            <span class="relative z-10 flex items-center justify-center gap-2">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5 transition-transform group-hover:scale-110"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                ></path>
              </svg>
              My Projects
            </span>
            <span
              class="absolute inset-0 -z-10 bg-gradient-to-r from-blue-100 to-purple-100 opacity-0 transition-opacity duration-300 group-hover:opacity-100 dark:from-blue-900/30 dark:to-purple-900/30"
            ></span>
          </a>
          <a
            href="/blog"
            class="group relative overflow-hidden rounded-lg bg-gradient-to-r from-blue-600 to-purple-600 px-6 py-3 text-sm font-medium text-white shadow-sm transition-all duration-300 hover:from-blue-700 hover:to-purple-700 hover:shadow-md sm:text-base"
          >
            <span class="relative z-10 flex items-center justify-center gap-2">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5 transition-transform group-hover:scale-110"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
                ></path>
              </svg>
              Read Blog
            </span>
            <span
              class="absolute inset-0 -z-10 bg-white/10 opacity-0 transition-opacity duration-300 group-hover:opacity-100"
            ></span>
          </a>
        </div>

        <div
          class="mt-12 flex flex-wrap justify-center gap-4 text-xs sm:text-sm"
        >
          {
            skills.map((skill) => (
              <span
                class={`skill-tag rounded-full bg-${skill.color}-100 px-3 py-1.5 text-${skill.color}-700 dark:bg-${skill.color}-900/30 dark:text-${skill.color}-300`}
              >
                {skill.name}
              </span>
            ))
          }
        </div>

        <div class="mt-16 flex justify-center">
          <div class="group flex flex-col items-center">
            <svg
              class="h-8 w-8 animate-bounce text-gray-400 transition-colors duration-300 group-hover:text-blue-500 dark:text-gray-600 dark:group-hover:text-blue-400"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
            </svg>
            <span
              class="mt-1 text-xs text-gray-500 transition-colors duration-300 group-hover:text-blue-500 dark:text-gray-400 dark:group-hover:text-blue-400"
            ></span>
          </div>
        </div>
      </div>
    </div>
  </section>

  <section class="flex flex-col gap-y-4">
    <h2 class="text-2xl font-medium">Latest posts</h2>
    <ul class="flex flex-col gap-y-4">
      {
        blog.map((post) => (
          <li>
            <BlogCard entry={post} />
          </li>
        ))
      }
    </ul>
    <div class="flex justify-center">
      <Link
        href="/blog"
        class={buttonVariants({ variant: 'ghost' }) + ' group'}
      >
        See all posts <span
          class="ml-1.5 transition-transform group-hover:translate-x-1"
          >&rarr;</span
        >
      </Link>
    </div>
  </section>
</Layout>
<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const container = document.querySelector('.typewriter-container')
    const textElement = document.getElementById('typewriter')
    const cursorElement = document.querySelector('.typewriter-cursor')
    if (!textElement || !container || !cursorElement) return

    const texts = JSON.parse(textElement.getAttribute('data-texts'))
    let currentIndex = 0

    function cycleText() {
      currentIndex = (currentIndex + 1) % texts.length
      const newText = texts[currentIndex]

      cursorElement.style.opacity = '0'

      textElement.style.animation = 'none'
      textElement.style.width = '0'
      textElement.textContent = newText

      void textElement.offsetWidth

      textElement.style.animation =
        'typing 3.5s cubic-bezier(0.44, 0.94, 0.52, 0.95)'
      textElement.style.width = '100%'

      setTimeout(() => {
        cursorElement.style.opacity = ''
      }, 100)
    }

    setInterval(cycleText, 5000)
  })
</script>
